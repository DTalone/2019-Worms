
plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.21'
    id 'jacoco'
}

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://dl.bintray.com/entelect-challenge/game-engine'
    }
}

kotlin {
    jvm()
    js()

    sourceSets {
        commonMain {
            kotlin.srcDir('game-engine-core/src/main')
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            kotlin.srcDir('game-engine-core/src/test')

            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            kotlin.srcDir('game-engine-jvm/src/main/kotlin')
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation 'za.co.entelect.challenge:game-engine-interface:2019.0.0+'
            }
        }
        jvmTest {
            kotlin.srcDir('game-engine-jvm/src/test/kotlin')
            dependencies {
                implementation kotlin('test-junit')
                implementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
            }
        }

        jsMain {
            kotlin.srcDir('game-engine-web/src/main/kotlin')
            dependencies {
                implementation kotlin('stdlib-js')
            }

        }
        jsTest {
            kotlin.srcDir('game-engine-web/src/test/kotlin')
            dependencies {
                implementation kotlin("test-js")
            }
        }
    }
}

group = 'za.co.entelect.challenge'
version = '2019.0.0-RC0'

task jacocoTestReport(type: JacocoReport) {
    description 'Generates a test coverage report'
    mustRunAfter jvmTest
    executionData jvmTest

    additionalClassDirs file("${buildDir}/classes/kotlin/jvm/main")
    additionalSourceDirs file("${rootDir}/game-engine-jvm/src/main/kotlin"), file("${rootDir}/game-engine-core/src/main")

    reports {
        xml.enabled false
        csv.enabled false
    }
}

task jacocoTestCoverageVerification(type: JacocoCoverageVerification) {
    description 'Enforces test coverage on all classes'

    mustRunAfter jvmTest
    shouldRunAfter jacocoTestReport
    executionData jvmTest

    additionalClassDirs file("${buildDir}/classes/kotlin/jvm/main")
    additionalSourceDirs file("${rootDir}/game-engine-jvm/src/main/kotlin"), file("${rootDir}/game-engine-core/src/main")

    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    'za.co.entelect.challenge.game.delegate.*',
                    'za.co.entelect.challenge.game.engine.simplexNoise.*',

                    'za.co.entelect.challenge.game.engine.entities.GameConfig',

                    // Temporary exclusions until properly implemented:
                    'za.co.entelect.challenge.game.engine.WormsEngine',
                    'za.co.entelect.challenge.game.engine.processor.GameError'
            ]
            limit {
                minimum = 0.75
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
check.dependsOn jacocoTestReport
